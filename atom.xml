<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dimsum</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://doc.dimsum.com/"/>
  <updated>2020-03-27T07:17:51.807Z</updated>
  <id>http://doc.dimsum.com/</id>
  
  <author>
    <name>Jiamiao.x</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://doc.dimsum.com/2020/03/27/hello-world/"/>
    <id>http://doc.dimsum.com/2020/03/27/hello-world/</id>
    <published>2020-03-27T07:17:51.807Z</published>
    <updated>2020-03-27T07:17:51.807Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>开发常用的docker镜像</title>
    <link href="http://doc.dimsum.com/2020/03/27/chang-yong-docker/"/>
    <id>http://doc.dimsum.com/2020/03/27/chang-yong-docker/</id>
    <published>2020-03-26T16:00:00.000Z</published>
    <updated>2020-03-27T08:47:18.133Z</updated>
    
    <content type="html"><![CDATA[<p>主要用于开发阶段，不涉及生产环境配置，无权限自行添加<code>sudo</code></p><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><ol><li>获取镜像<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure></li><li>运行Redis<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 6379:6379 -d redis:lastes redis-server</span><br></pre></td></tr></table></figure></li></ol><h1 id="Elasticsearch-集群"><a href="#Elasticsearch-集群" class="headerlink" title="Elasticsearch(集群)"></a>Elasticsearch(集群)</h1><ol start="0"><li>说明：<ul><li>这里这里使用的是Elasticsearch 7.3.0版本</li><li>集群一共有3个Container，一个Master，两个Slave</li><li>配置文件中的<code>192.168.2.58</code>为对应节点的IP地址</li><li>具体配置:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Elasticsearch集群</span><br><span class="line">    |------ Master</span><br><span class="line">        |--- 端口：9500</span><br><span class="line">        |--- TCP端口：9300</span><br><span class="line">        |--- 配置文件目录：~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;master&#x2F;elasticsearch.yml</span><br><span class="line">        |--- 共享卷目录：~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;master&#x2F;data</span><br><span class="line">    |------ Slave1</span><br><span class="line">        |--- 端口：9600</span><br><span class="line">        |--- TCP端口：9301</span><br><span class="line">        |--- 配置文件目录：~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;slave1&#x2F;elasticsearch.yml</span><br><span class="line">        |--- 共享卷目录：~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;slave1&#x2F;data</span><br><span class="line">    |------ Slave2</span><br><span class="line">        |--- 端口：9700</span><br><span class="line">        |--- TCP端口：9302</span><br><span class="line">        |--- 配置文件目录：~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;slave2&#x2F;elasticsearch.yml</span><br><span class="line">        |--- 共享卷目录：~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;slave2&#x2F;data</span><br></pre></td></tr></table></figure></li></ul></li><li>获取镜像<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull elasticsearch:7.3.0</span><br></pre></td></tr></table></figure></li><li>在宿主机创建各个节点的<code>elasticsearch.yml</code>配置文件，具体内容如下:<ul><li>Master节点，配置文件路径：<code>~/var/elasticsearch/config/master/elasticsearch.yml</code><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置支持Elasticsearch-Head</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">"*"</span></span><br><span class="line"><span class="comment"># 设置集群Master配置信息</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">myEsCluster</span></span><br><span class="line"><span class="comment"># 节点的名字，一般为Master或者Slave</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">master</span></span><br><span class="line"><span class="comment"># 节点是否为Master，设置为true的话，说明此节点为Master节点</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 设置网络，如果是本机的话就是127.0.0.1，其他服务器配置对应的IP地址即可(0.0.0.0支持外网访问)</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment"># 设置对外服务的Http端口，默认为 9200，可以修改默认设置</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9500</span></span><br><span class="line"><span class="comment"># 设置节点间交互的TCP端口，默认是9300</span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9300</span></span><br><span class="line"><span class="comment"># 手动指定可以成为Master的所有节点的Name或者IP，这些配置将会在第一次选举中进行计算</span></span><br><span class="line"><span class="attr">cluster.initial_master_nodes:</span> <span class="string">["master"]</span></span><br><span class="line"><span class="comment"># 集群发现节点信息，一般为其他节点IP加交互端口，这里一般填主机IP</span></span><br><span class="line"><span class="attr">discovery.seed_hosts:</span> <span class="string">["192.168.2.58:9301",</span> <span class="string">"192.168.2.58:9302"</span><span class="string">]</span></span><br></pre></td></tr></table></figure></li><li>Slave1节点，配置文件路径：<code>~/var/elasticsearch/config/slave1/elasticsearch.yml</code><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置集群Slave配置信息</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">myEsCluster</span></span><br><span class="line"><span class="comment"># 节点的名字，一般为Master或者Slave</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">slave1</span></span><br><span class="line"><span class="comment"># 节点是否为Master，设置为true的话，说明此节点为master节点</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 设置对外服务的Http端口，默认为 9200，可以修改默认设置</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9600</span></span><br><span class="line"><span class="comment"># 设置节点间交互的TCP端口，默认是9300</span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9301</span></span><br><span class="line"><span class="comment"># 设置网络，如果是本机的话就是127.0.0.1，其他服务器配置对应的IP地址即可(0.0.0.0支持外网访问)</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment"># 集群发现节点信息，一般为其他节点IP加交互端口，这里一般填主机IP</span></span><br><span class="line"><span class="attr">discovery.seed_hosts:</span> <span class="string">["192.168.2.58:9300",</span> <span class="string">"192.168.2.58:9302"</span><span class="string">]</span></span><br></pre></td></tr></table></figure></li><li>Slave2节点，配置文件路径：<code>~/var/elasticsearch/config/slave2/elasticsearch.yml</code><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置集群Slave配置信息</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">myEsCluster</span></span><br><span class="line"><span class="comment"># 节点的名字，一般为Master或者Slave</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">slave2</span></span><br><span class="line"><span class="comment"># 节点是否为Master，设置为true的话，说明此节点为master节点</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 设置对外服务的Http端口，默认为 9200，可以修改默认设置</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9700</span></span><br><span class="line"><span class="comment"># 设置节点间交互的TCP端口，默认是9300</span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9302</span></span><br><span class="line"><span class="comment"># 设置网络，如果是本机的话就是127.0.0.1，其他服务器配置对应的IP地址即可(0.0.0.0支持外网访问)</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment"># 集群发现节点信息，一般为其他节点IP加交互端口，这里一般填主机IP</span></span><br><span class="line"><span class="attr">discovery.seed_hosts:</span> <span class="string">["192.168.2.58:9300",</span> <span class="string">"192.168.2.58:9301"</span><span class="string">]</span></span><br></pre></td></tr></table></figure></li></ul></li><li>创建3个节点的<code>data</code>文件夹 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;master&#x2F;data</span><br><span class="line">~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;slave1&#x2F;data</span><br><span class="line">~&#x2F;var&#x2F;elasticsearch&#x2F;config&#x2F;slave2&#x2F;data</span><br></pre></td></tr></table></figure></li><li>运行节点<ul><li>运行Master节点<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -e ES_JAVA_OPTS=<span class="string">"-Xms256m -Xmx256m"</span> -d -v ~/var/elasticsearch/config/master/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v ~/var/elasticsearch/config/master/data:/usr/share/elasticsearch/data --name esMaster -p 9500:9500 -p 9300:9300 elasticsearch:7.3.0</span><br></pre></td></tr></table></figure></li><li>运行Slave1节点<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -e ES_JAVA_OPTS=<span class="string">"-Xms256m -Xmx256m"</span> -d -v ~/var/elasticsearch/config/slave1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v ~/var/elasticsearch/config/slave1/data:/usr/share/elasticsearch/data --name esSlave1 -p 9600:9600 -p 9301:9301 elasticsearch:7.3.0</span><br></pre></td></tr></table></figure></li><li>运行Slave2节点<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -e ES_JAVA_OPTS=<span class="string">"-Xms256m -Xmx256m"</span> -d -v ~/var/elasticsearch/config/slave2/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v ~/var/elasticsearch/config/slave2/data:/usr/share/elasticsearch/data --name esSlave2 -p 9700:9700 -p 9302:9302 elasticsearch:7.3.0</span><br></pre></td></tr></table></figure></li></ul></li><li>检查运行状态<ul><li>运行<code>docker ps</code>查看正在运行的Container，确保以上3个容器正常运行</li><li>访问<code>http://127.0.0.1:9500/_cat/nodes?v</code>查看是否有3个节点信息，如果节点运行正常，应该有如下信息<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip         heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name</span><br><span class="line">172.17.0.2           32          96  70    3.03    0.82     0.28 di        -      slave1</span><br><span class="line">172.17.0.3           30          96  70    3.03    0.82     0.28 di        -      slave2</span><br><span class="line">172.17.0.4           33          96  70    3.03    0.82     0.28 dim       *      master</span><br></pre></td></tr></table></figure></li></ul></li><li>安装<code>Elasticsearch-Head</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name es-head -p 9100:9100 mobz/elasticsearch-head:5</span><br></pre></td></tr></table></figure>运行成功后浏览器访问链接:<code>http://127.0.0.1:9100</code>，将里面的连接地址修改为:<code>http://localhost:9500</code>，保存即可看到3个节点的集群信息</li><li>安装<code>IK</code>分词软件<ul><li>这部分操作3个节点均需要操作一边</li><li>ElasticSearch版本为7.3.0，对应IK分词版本为7.3,下载链接<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.3.0/elasticsearch-analysis-ik-7.3.0.zip" target="_blank" rel="noopener">IK分词</a></li><li>具体操作就是将下载下来的包放在各个节点的共享卷里，然后进入ES容器内命令行，解压并将文件拷贝到plugins文件夹中，重启容器</li></ul></li></ol><h1 id="RabbitMq"><a href="#RabbitMq" class="headerlink" title="RabbitMq"></a>RabbitMq</h1><ol><li>获取镜像<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull rabbitmq:management</span><br></pre></td></tr></table></figure></li><li>运行镜像，设置用户名密码(admin/admin)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit --name Myrabbitmq -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -p 15672:15672 -p 5672:5672 rabbitmq:managemen</span><br></pre></td></tr></table></figure></li><li>进入管理界面 <code>http://localhost:15672</code></li></ol><h1 id="SqlServer-2017"><a href="#SqlServer-2017" class="headerlink" title="SqlServer 2017"></a>SqlServer 2017</h1><ol><li>获取镜像<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mcr.microsoft.com/mssql/server:2017-latest</span><br></pre></td></tr></table></figure></li><li>运行镜像，设置<code>SA</code>密码为<code>Strong-Password</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">'ACCEPT_EULA=Y'</span> -e <span class="string">'SA_PASSWORD=Strong*Password'</span> -p 1433:1433 --name mssql -v /data:/var/opt/mssql -d mcr.microsoft.com/mssql/server:2017-latest</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要用于开发阶段，不涉及生产环境配置，无权限自行添加&lt;code&gt;sudo&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;Redis&quot;&gt;&lt;a href=&quot;#Redis&quot; class=&quot;headerlink&quot; title=&quot;Redis&quot;&gt;&lt;/a&gt;Redis&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;获
      
    
    </summary>
    
    
      <category term="Docker" scheme="http://doc.dimsum.com/categories/Docker/"/>
    
    
      <category term="docker" scheme="http://doc.dimsum.com/tags/docker/"/>
    
      <category term="elasticsearch" scheme="http://doc.dimsum.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>.NET Core使用Cap</title>
    <link href="http://doc.dimsum.com/2020/03/27/dotnet-core-cap/"/>
    <id>http://doc.dimsum.com/2020/03/27/dotnet-core-cap/</id>
    <published>2020-03-26T16:00:00.000Z</published>
    <updated>2020-03-27T08:49:50.101Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term=".NET" scheme="http://doc.dimsum.com/categories/NET/"/>
    
    
      <category term=".NET Core" scheme="http://doc.dimsum.com/tags/NET-Core/"/>
    
      <category term="CAP" scheme="http://doc.dimsum.com/tags/CAP/"/>
    
      <category term="MicroServices" scheme="http://doc.dimsum.com/tags/MicroServices/"/>
    
  </entry>
  
</feed>
